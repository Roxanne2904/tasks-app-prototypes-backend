version: "3"

services:
  app: # Construit l'image Docker pour ce service en utilisant le Dockerfile trouvé dans le répertoire actuel.
    build: .
    container_name: cp-11-backend
    ports:
      - "3000:3000" # Mappe le port 3000 du conteneur sur le port 3000 de l'hôte
    depends_on:
      - mariadb # Dépend du service mariadb
    environment:
      - NODE_ENV=development
      - DATABASE_URL=mysql://user:motdepasse@mariadb:3306/database # URL de la base de données utilisée par l'application backend
    networks:
      cp-11-network: # Connecte ce service au réseau cp-11-network

  mariadb:
    image: mariadb:latest # Utilise l'image Docker officielle MariaDB
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    expose:
      - "${PORT_MDB}"
    ports:
      - "${PORT_MDB}:3306"
    volumes:
      - mariadb_data:/var/lib/mysql # Montre le volume mariadb_data pour persister les données de la base de données
    networks:
      cp-11-network: # Connecte ce service au réseau cp-11-network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    restart: always
    expose:
      - "${PMA_EXPOSE_PORT}"
    ports:
      - "${PMA_EXPOSE_PORT}:80"
    environment:
      - PMA_HOST=${PMA_HOST}
      - PMA_PORT=${PMA_PORT}
      - PMA_USER=${MYSQL_USER}
      - PMA_PASSWORD=${MYSQL_PASSWORD}
    depends_on:
      - mariadb
    networks:
      cp-11-network:

networks:
  cp-11-network: # Définit un réseau personnalisé nommé cp-11-network pour connecter les deux services
    driver: bridge

volumes:
  mariadb_data: # Définit le volume mariadb_data pour persister les données de la base de données
    driver: local
